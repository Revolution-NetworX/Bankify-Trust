{"version":3,"sources":["./src/app/manage-users/moduli/manage-users-routing.module.ts","./src/app/payout/moduli/payout.module.ts","./src/app/modeli/payment.model.ts","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/register/moduli/register-routing.module.ts","./src/app/data-users.service.ts","./src/app/payment/moduli/payment-routing.module.ts","./src/environments/environment.ts","./src/app/payout/payout.component.ts","./src/app/payout/payout.component.html","./src/app/payment/payment.component.ts","./src/app/payment/payment.component.html","./src/app/payment/moduli/payment.module.ts","./src/app/shared/navbar/navbar.component.html","./src/app/shared/navbar/navbar.component.ts","./src/app/register/moduli/register.module.ts","./src/app/modeli/user.model.ts","./src/app/bank/moduli/bank.module.ts","./src/app/bank/moduli/bank-routing.module.ts","./src/app/account-balance/moduli/account-balance-routing.module.ts","./src/app/data-payments.service.ts","./src/app/shared/filter-payments-by-user.pipe.ts","./src/app/manage-users/moduli/manage-users.module.ts","./src/app/shared/auth.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/payout/moduli/payout-routing.module.ts","./src/app/shared/moduli/shared.module.ts","./src/app/app.module.ts","./src/app/shared/auth.interceptor.ts","./src/app/shared/role.guard.ts","./src/app/login/moduli/login-routing.module.ts","./src/app/bank/bank.component.ts","./src/app/bank/bank.component.html","./src/app/login/moduli/login.module.ts","./src/app/account-balance/account-balance.component.html","./src/app/account-balance/account-balance.component.ts","./src/app/manage-users/manage-users.component.html","./src/app/manage-users/manage-users.component.ts","./src/app/shared/auth-guard.service.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/account-balance/moduli/account-balance.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {ManageUsersComponent} from \"../manage-users.component\";\n\nconst routes: Routes = [\n  {path: '', component: ManageUsersComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ManageUsersRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PayoutRoutingModule } from './payout-routing.module';\nimport {PayoutComponent} from \"../payout.component\";\nimport {PaymentModule} from \"../../payment/moduli/payment.module\";\n\n\n@NgModule({\n  declarations: [PayoutComponent],\n  imports: [\n    CommonModule,\n    PayoutRoutingModule,\n    PaymentModule\n  ]\n})\nexport class PayoutModule { }\n","import {User} from \"./user.model\";\r\n\r\nexport class Payment{\r\n\r\n  _id?: any;\r\n  date?: Date;\r\n  userIdFrom?: any;\r\n  userIdTo?: any;\r\n  amount?: number;\r\n  userFrom?: User;\r\n  userTo?: User;\r\n  username?: string;\r\n}\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {User} from \"../modeli/user.model\";\nimport {DataUsersService} from \"../data-users.service\";\nimport {NgForm} from \"@angular/forms\";\nimport {Subscription} from \"rxjs\";\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit, OnDestroy {\n\n  user: User = new User();\n  users: User[] = [];\n  subscription: Subscription;\n  disabled: boolean;\n  // user: User;\n\n  constructor(private userService: DataUsersService) { }\n\n  ngOnInit(): void {\n    this.subscription = this.userService.getUsers().subscribe((res:any) =>{\n      this.users = res;\n      console.log(this.users);\n    })\n  }\n\n  usernameExists(username) {\n    if (username != null && username != '' && username != undefined && this.users != null && this.users != undefined) {\n      if (this.users.some(x => x.username == username)) {\n        this.disabled = true;\n        return true;\n      }\n    }\n    else {\n      this.disabled = false;\n      return false;\n    }\n  }\n\n  send(form: NgForm) {\n\n    this.userService.addUser(this.user);\n    this.user.repeatedPassword = '';\n    this.user.password = '';\n    this.user.username = '';\n    this.user.email = '';\n\n    form.resetForm();\n\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-4\">\n      <h2>Register form: </h2>\n      <form novalidate #rega=\"ngForm\">\n        <div class=\"form-group\">\n          <label>Username: </label>\n          <input type=\"text\" name=\"username\"\n                 [ngClass]=\"{\n                  'is-invalid': username.invalid && username.touched\n             }\"\n                 [(ngModel)]=\"user.username\" #username=\"ngModel\" required minlength=\"3\" class=\"form-control\">\n        </div>\n        <p *ngIf=\"(username.errors && username.touched)\" class=\"warning-text\" style=\"color: red\">\n          At least 4 letters\n        </p>\n        <p *ngIf=\"usernameExists(user.username)\" class=\"warning-text\" style=\"color: red\">\n          Username exists\n        </p>\n\n\n        <div class=\"form-group\">\n          <label>Password: </label>\n          <input type=\"password\" name=\"password\" [(ngModel)]=\"user.password\" #modelPassword=\"ngModel\" required\n                 class=\"form-control\">\n        </div>\n\n        <div class=\"form-group\">\n          <label>Repeat Password: </label>\n          <input type=\"password\" name=\"repeatedPassword\"\n                 [ngClass]=\"{\n                  'is-invalid': modelConfirmPassword.touched && modelConfirmPassword.invalid\n             }\"\n                 [(ngModel)]=\"user.repeatedPassword\" #modelConfirmPassword=\"ngModel\"\n                 ngValidateEqual=\"password\" placeholder=\"Confirm Password\" class=\"form-control\">\n        </div>\n\n        <div *ngIf=\"modelConfirmPassword.touched && modelConfirmPassword.invalid\">\n          <p *ngIf=\"modelConfirmPassword.hasError('notEqual')\" class=\"warning-text\" style=\"color: red\">\n            Passwords Don't Match\n          </p>\n        </div>\n\n        <div class=\"form-group\">\n          <label>Email: </label>\n          <input type=\"email\" name=\"email\"\n                 [ngClass]=\"{\n                  'is-invalid': email.invalid && (email.dirty || email.touched),\n                  'is-valid': email.valid && (email.dirty || email.touched)\n             }\"\n                 [(ngModel)]=\"user.email\" #email=\"ngModel\" pattern=\"[^ @]*@[^ @]*\" required class=\"form-control\">\n        </div>\n        <div *ngIf=\"email.errors && (email.dirty || email.touched)\" class=\"warning-text\">\n          <span *ngIf=\"email.errors.required\" style=\"color: red\" class=\"warning-text\">Email is required</span>\n          <span *ngIf=\"email.errors.pattern\" style=\"color: red\" class=\"warning-text\">Email must contain at least the @ character</span>\n        </div>\n\n      </form>\n\n      <div>\n        <button [disabled]=\"!rega.valid || disabled\" (click)=\"send(rega)\" class=\"btn btn-success\">Register</button>\n        <p *ngIf=\"usernameExists(user.username)\"></p>\n      </div>\n      <br>\n      <div>\n        <a [routerLink]=\"'/login'\"> Back to login form </a>\n      </div>\n\n\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {RegisterComponent} from \"../register.component\";\n\nconst routes: Routes = [\n  {path: '', component: RegisterComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RegisterRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {User} from \"./modeli/user.model\";\nimport {BehaviorSubject} from \"rxjs\";\nimport {environment} from \"../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataUsersService {\n\n  // apiRoot = 'http://localhost:8081/api/users';\n  apiRoot = environment.API_URL + '/api/users';\n\n  users: User[] = [];\n  usersSubject: BehaviorSubject<User[]> = new BehaviorSubject(null);\n\n  constructor(private http: HttpClient) {\n    this.onInit();\n  }\n\n  onInit(){\n    this.http.get(this.apiRoot).subscribe((res:any) => {\n      console.log(res);\n      this.users = res.users;\n      this.usersSubject.next([...this.users]);\n    })\n  }\n\n  getUsers(){\n    return this.usersSubject;\n  }\n\n  addUser(user){\n    this.http.post(this.apiRoot, user).subscribe((res:any) =>{\n      this.users.push(res.user);\n      this.usersSubject.next([...this.users]);\n    })\n  }\n\n  deleteUser(user){\n    this.http.delete(this.apiRoot + `/${user._id}`, user).subscribe((res:any) =>{\n      this.users = this.users.filter(x => x._id != user._id);\n      this.usersSubject.next([...this.users]);\n    })\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {PaymentComponent} from \"../payment.component\";\n\nconst routes: Routes = [\n  {path: '', component: PaymentComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PaymentRoutingModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  API_URL: 'http://localhost:8081'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-payout',\n  templateUrl: './payout.component.html',\n  styleUrls: ['./payout.component.css']\n})\nexport class PayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-payment></app-payment>\n","import {Component, OnInit, OnDestroy} from '@angular/core';\nimport {DataPaymentsService} from \"../data-payments.service\";\nimport {Payment} from \"../modeli/payment.model\";\nimport {Subscription} from \"rxjs\";\nimport {User} from \"../modeli/user.model\";\nimport {AuthService} from \"../shared/auth.service\";\nimport {DataUsersService} from \"../data-users.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-payment',\n  templateUrl: './payment.component.html',\n  styleUrls: ['./payment.component.css']\n})\nexport class PaymentComponent implements OnInit, OnDestroy {\n\n  payments: Payment[] = [];\n  payouts: Payment[] = [];\n  subscription: Subscription;\n  user: User;\n\n  editedPayment: Payment;\n  users: User[] = [];\n  newPayment = new Payment();\n  // newPayment: Payment = {\n  //   _id: '',\n  //   date: new Date(),\n  //   userIdTo: '',\n  //   userIdFrom: '',\n  //   amount: 1\n  // };\n  newUsername: string;\n  newAmount: number;\n  windowState: string;\n  state: string;\n\n  constructor(private paymentsService: DataPaymentsService, private auth: AuthService,\n              private usersService: DataUsersService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.user = this.auth.getUser();\n    this.subscription = this.paymentsService.getPayments().subscribe((res: any) => {\n      this.payments = res;\n    })\n  }\n\n  getRoute(routeSubString){\n    return this.router.url.includes(routeSubString);\n  }\n\n  onEdit(payment) {\n    this.windowState = 'active';\n    this.state = 'edit';\n    this.editedPayment = {...payment};\n    this.editedPayment.userIdTo = payment.userTo._id;\n    this.editedPayment.userIdFrom = payment.userFrom._id;\n  }\n\n  onAdd() {\n    this.windowState = 'active';\n    this.state = 'add';\n    this.usersService.getUsers().subscribe((res: any) =>{\n      this.users = res;\n    })\n  }\n\n  onCancel() {\n    this.windowState = '';\n    this.state = '';\n    // this.newPayment = null;\n  }\n\n  editPayment() {\n    // delete pay.userTo;\n    // delete pay.userFrom;\n\n    this.paymentsService.updatePayment(this.editedPayment);\n\n  }\n\n  deletePayment(id) {\n    console.log(id);\n    this.paymentsService.deletePayment(id);\n    this.payments = this.payments.filter(x => x._id != id)\n  }\n\n  addPayment() {\n    // this.newPayment.userIdFrom = this.user._id;\n    // this.newPayment.username = this.newUsername;\n    this.newPayment.amount = this.newAmount;\n    this.newPayment.userIdFrom = this.user._id;\n\n    let userTo = this.users.find(x => x.username == this.newUsername);\n    this.newPayment.userIdTo = userTo._id;\n\n    this.paymentsService.addPayment({...this.newPayment});\n\n    this.newPayment.userTo = userTo;\n\n    delete this.newPayment.userIdFrom;\n    delete this.newPayment.userIdTo;\n\n    //1 let temp = {...this.payments[2]};\n    // console.log(temp);\n    // this.payments.push(temp);\n    // console.log(this.payments);\n\n    this.newPayment.date = new Date();\n    this.newPayment.userFrom = this.user;\n\n    // console.log(\"test\", this.newPayment);\n    this.payments.push(this.newPayment);\n\n    // this.payments = this.payments.slice();\n  }\n\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n\n}\n","<div class=\"container\">\n  <p>Welcome {{user.username}} your current balance is {{user.balance}}$</p>\n  <h2 style=\"text-align: center\">All Payments:</h2>\n  <div class=\"jumbotron\">\n    <div *ngFor=\"let pay of payments | filterPaymentsByUser: user\">\n<!--    <div *ngFor=\"let pay of payments\">-->\n      <h5 *ngIf=\"getRoute('/payment')\" style=\"text-align: center\">Payment to {{pay.userTo.username}}:</h5>\n      <h5 *ngIf=\"getRoute('/payout')\" style=\"text-align: center\">Payout from {{pay.userFrom.username}}:</h5>\n      <p>{{pay.date | date:'short'}} => {{pay.amount}}$</p>\n      <button (click)=\"onEdit(pay)\" class=\"btn btn-warning odmakni-desno\">Edit a payment</button>\n      <button (click)=\"deletePayment(pay._id)\" class=\"btn btn-danger\">Delete a payment</button>\n      <br><br>\n    </div>\n  </div>\n\n  <button *ngIf=\"state != 'add' && getRoute('/payment')\" (click)=\"onAdd()\"  class=\"btn btn-success\">Add a payment</button>\n\n  <div *ngIf=\"windowState == 'active' && state == 'add'\">\n    <br>\n    <div class=\"container\">\n      <label>Username</label>\n      <input [(ngModel)]=\"newUsername\" type=\"text\" placeholder=\"To whom...\" class=\"form-control\">\n      <br>\n      <label>Amount</label>\n      <input [(ngModel)]=\"newAmount\" type=\"number\" placeholder=\"How much...\" class=\"form-control\"><br>\n      <button (click)=\"addPayment()\"  class=\"btn btn-success odmakni-desno\">Add a new payment</button>\n      <button (click)=\"onCancel()\"  class=\"btn btn-danger\">Cancel</button>\n    </div>\n  </div>\n\n  <div *ngIf=\"windowState == 'active' && state == 'edit'\">\n    <br>\n    <div class=\"container\">\n      <label>Username</label>\n      <input [(ngModel)]=\"editedPayment.userTo.username\" type=\"text\" class=\"form-control\">\n      <br>\n      <label>Amount</label>\n      <input [(ngModel)]=\"editedPayment.amount\" type=\"number\" class=\"form-control\"><br>\n      <button (click)=\"editPayment()\"  class=\"btn btn-warning odmakni-desno\">Edit a payment</button>\n      <button (click)=\"onCancel()\"  class=\"btn btn-danger\">Cancel</button>\n    </div>\n  </div>\n\n\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PaymentRoutingModule } from './payment-routing.module';\nimport {PaymentComponent} from \"../payment.component\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {FormsModule} from \"@angular/forms\";\nimport {FilterPaymentsByUserPipe} from \"../../shared/filter-payments-by-user.pipe\";\n\n\n@NgModule({\n  declarations: [PaymentComponent, FilterPaymentsByUserPipe],\n  exports: [\n    PaymentComponent\n  ],\n  imports: [\n    CommonModule,\n    PaymentRoutingModule,\n    HttpClientModule,\n    FormsModule,\n  ]\n})\nexport class PaymentModule { }\n","<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css\" integrity=\"sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2\" crossorigin=\"anonymous\">\n  <script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\" integrity=\"sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj\" crossorigin=\"anonymous\"></script>\n  <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-ho+j7jyWK8fNQe+A12Hb8AhRq26LrZ/JpcUGGOn+Y7RsweNrtN/tE3MoK7ZeZDyx\" crossorigin=\"anonymous\"></script>\n  <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n\n  <style>\n    .odmakni-btn{\n      padding-right: 10px;\n      padding-bottom: 1px;\n      padding-top: 1px;\n    }\n\n    #footer {\n      position:absolute;\n      bottom:0;\n      width:100%;\n      height:60px;   /* Height of the footer */\n      background:rgb(52, 58, 64);\n    }\n\n    .zoom {\n      transition: transform .2s;\n    }\n\n    .zoom:hover {\n      transform: scale(1.3);\n    }\n\n    img.zoom:hover {\n      transform: scale(1.02);\n    }\n\n  </style>\n\n</head>\n\n<header>\n  <!-- Samo za lg i xl -->\n  <div class=\"d-none d-lg-block\">\n    <div class=\"row\">\n      <div class=\"col-lg\">\n        <nav class=\"navbar navbar-expand-sm bg-dark navbar-dark\">\n          <!-- Brand -->\n          <button class=\"navbar-brand\" style=\"margin-right: 40px; background-color:transparent; border: none;\" [routerLink]=\"['']\">Bankify Trust</button>\n\n          <!-- Links -->\n          <ul class=\"navbar-nav\">\n            <li class=\"nav-link odmakni-btn\">\n              <button type=\"button\" class=\"btn btn-secondary\" [ngClass]=\"getClass('/accountBalance')\" [routerLink]=\"['accountBalance']\">Account balance</button>\n            </li>\n            <li class=\"nav-link odmakni-btn\">\n              <button type=\"button\" class=\"btn btn-secondary\" [ngClass]=\"getClass('/payment')\" [routerLink]=\"['payment']\">Payments</button>\n            </li>\n            <li class=\"nav-link odmakni-btn\">\n              <button type=\"button\" class=\"btn btn-secondary\" [ngClass]=\"getClass('/payout')\" [routerLink]=\"['payout']\">Payouts</button>\n            </li>\n            <li class=\"nav-link odmakni-btn\">\n              <button type=\"button\" class=\"btn btn-secondary\" [ngClass]=\"getClass('/login')\" [routerLink]=\"['login']\">Login</button>\n            </li>\n            <li class=\"nav-link odmakni-btn\">\n              <button type=\"button\" class=\"btn btn-secondary\" [ngClass]=\"getClass('/register')\" [routerLink]=\"['register']\">Register</button>\n            </li>\n          </ul>\n          <ul *ngIf=\"userExists()\" class=\"navbar-nav ml-auto\">\n            <li *ngIf=\"user.level == 2\" class=\"nav-link odmakni-btn\">\n              <button type=\"button\" class=\"btn btn-primary\" [ngClass]=\"getClass('/manageUsers')\" [routerLink]=\"['manageUsers']\">Manage Users</button>\n            </li>\n            <li class=\"nav-link odmakni-btn\">\n              <button type=\"button\" class=\"btn\" (click)=\"onLogout()\" style=\"color: red\">Logout</button>\n            </li>\n          </ul>\n        </nav>\n      </div>\n    </div>\n  </div>\n\n  <!-- Samo za md i sm i xs -->\n  <div class=\"d-block d-lg-none\">\n    <div class=\"row\">\n      <div class=\"col-md .d-none .d-md-block .d-lg-none\">\n        <nav class=\"navbar navbar-expand-md bg-dark navbar-dark\">\n          <!-- Brand -->\n          <button class=\"navbar-brand\" style=\"margin-right: 40px; background-color:transparent; border: none;\" [routerLink]=\"['']\">Bankify Trust</button>\n\n          <!-- Toggler/collapsibe Button -->\n          <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                  data-target=\"#collapsibleNavbar\">\n            <span class=\"navbar-toggler-icon\"></span>\n          </button>\n\n          <!-- Navbar links -->\n          <div class=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\n            <ul class=\"navbar-nav\">\n              <li class=\"nav-link odmakni-btn\">\n                <button type=\"button\" class=\"btn btn-secondary\" [ngClass]=\"getClass('/accountBalance')\" [routerLink]=\"['accountBalance']\">Account balance</button>\n              </li>\n              <li class=\"nav-link odmakni-btn\">\n                <button type=\"button\" class=\"btn btn-secondary\" [ngClass]=\"getClass('/payment')\" [routerLink]=\"['payment']\">Payments</button>\n              </li>\n              <li class=\"nav-link odmakni-btn\">\n                <button type=\"button\" class=\"btn btn-secondary\" [ngClass]=\"getClass('/payout')\" [routerLink]=\"['payout']\">Payouts</button>\n              </li>\n              <li class=\"nav-link odmakni-btn\">\n                <button type=\"button\" class=\"btn btn-secondary\" [ngClass]=\"getClass('/login')\" [routerLink]=\"['login']\">Login</button>\n              </li>\n              <li class=\"nav-link odmakni-btn\">\n                <button type=\"button\" class=\"btn btn-secondary\" [ngClass]=\"getClass('/register')\" [routerLink]=\"['register']\">Register</button>\n              </li>\n            </ul>\n            <ul *ngIf=\"userExists()\" class=\"navbar-nav ml-auto\">\n              <li *ngIf=\"user.level == 2\" class=\"nav-link odmakni-btn\">\n                <button type=\"button\" class=\"btn btn-primary\" [ngClass]=\"getClass('/manageUsers')\" [routerLink]=\"['manageUsers']\">Manage Users</button>\n              </li>\n              <li class=\"nav-link odmakni-btn\">\n                <button type=\"button\" class=\"btn\" (click)=\"onLogout()\" style=\"color: red\">Logout</button>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      </div>\n    </div>\n  </div>\n</header>\n\n<!--###################################################################################################################################################################-->\n\n<body></body>\n\n<!--#####################################################################################################################################################################################    -->\n\n\n<footer id=\"footer\"><!-- Samo za lg i xl -->\n  <div class=\"d-none d-lg-block\">\n    <div class=\"row\">\n      <div class=\"col-lg\">\n        <nav class=\"navbar navbar-expand-sm bg-dark navbar-dark fixed-bottom\">\n          <!-- Brand -->\n          <button class=\"navbar-brand\" style=\"margin-right: 40px; background-color:transparent; border: none;\" [routerLink]=\"['']\">Bankify Trust</button>\n\n          <!-- Links -->\n          <ul class=\"navbar-nav\">\n            <li class=\"nav-link odmakni-btn\">\n              <button type=\"button\" class=\"btn btn-secondary\" [ngClass]=\"getClass('/accountBalance')\" [routerLink]=\"['accountBalance']\">Account balance</button>\n            </li>\n            <li class=\"nav-link odmakni-btn\">\n              <button type=\"button\" class=\"btn btn-secondary\" [ngClass]=\"getClass('/payment')\" [routerLink]=\"['payment']\">Payments</button>\n            </li>\n            <li class=\"nav-link odmakni-btn\">\n              <button type=\"button\" class=\"btn btn-secondary\" [ngClass]=\"getClass('/payout')\" [routerLink]=\"['payout']\">Payouts</button>\n            </li>\n            <li class=\"nav-link odmakni-btn\">\n              <button type=\"button\" class=\"btn btn-secondary\" [ngClass]=\"getClass('/login')\" [routerLink]=\"['login']\">Login</button>\n            </li>\n            <li class=\"nav-link odmakni-btn\">\n              <button type=\"button\" class=\"btn btn-secondary\" [ngClass]=\"getClass('/register')\" [routerLink]=\"['register']\">Register</button>\n            </li>\n          </ul>\n          <ul class=\"navbar-nav ml-auto\">\n            <li class=\"nav-link\">\n              <i class=\"nav-link fa fa-facebook zoom\" style=\"font-size: 30px;\"></i>\n            </li>\n            <li class=\"nav-link\">\n              <i class=\"nav-link fa fa-instagram zoom\" style=\"font-size: 30px;\"></i>\n            </li>\n            <li class=\"nav-link\">\n              <i class=\"nav-link fa fa-twitter zoom\" style=\"font-size: 30px;\"></i>\n            </li>\n            <li class=\"nav-link\">\n              <i class=\"nav-link fa fa-pinterest zoom\" style=\"font-size: 30px;\"></i>\n            </li>\n          </ul>\n        </nav>\n      </div>\n    </div>\n  </div>\n\n  <!-- Samo za md i sm -->\n  <div class=\"d-none d-sm-block d-lg-none\">\n    <div class=\"row\">\n      <nav class=\"navbar navbar-expand-sm bg-dark navbar-dark fixed-bottom\">\n        <div class=\"col-4\">\n          <!-- Brand -->\n          <button class=\"navbar-brand\" style=\"margin-right: 40px; background-color:transparent; border: none;\" [routerLink]=\"['']\">Bankify Trust</button>\n\n          <ul class=\"navbar-nav ml-auto\">\n            <li class=\"nav-link\">\n              <i class=\"nav-link fa fa-facebook zoom\" style=\"font-size: 30px;\"></i>\n            </li>\n            <li class=\"nav-link\">\n              <i class=\"nav-link fa fa-instagram zoom\" style=\"font-size: 30px;\"></i>\n            </li>\n            <li class=\"nav-link\">\n              <i class=\"nav-link fa fa-twitter zoom\" style=\"font-size: 30px;\"></i>\n            </li>\n            <li class=\"nav-link\">\n              <i class=\"nav-link fa fa-pinterest zoom\" style=\"font-size: 30px;\"></i>\n            </li>\n          </ul>\n        </div>\n\n        <div class=\"col-8\">\n          <!-- Links -->\n          <ul class=\"navbar-nav\">\n            <li class=\"nav-link odmakni-btn\">\n              <button type=\"button\" class=\"btn btn-secondary\" [ngClass]=\"getClass('/accountBalance')\" [routerLink]=\"['accountBalance']\">Account balance</button>\n            </li>\n            <li class=\"nav-link odmakni-btn\">\n              <button type=\"button\" class=\"btn btn-secondary\" [ngClass]=\"getClass('/payment')\" [routerLink]=\"['payment']\">Payments</button>\n            </li>\n            <li class=\"nav-link odmakni-btn\">\n              <button type=\"button\" class=\"btn btn-secondary\" [ngClass]=\"getClass('/payout')\" [routerLink]=\"['payout']\">Payouts</button>\n            </li>\n            <li class=\"nav-link odmakni-btn\">\n              <button type=\"button\" class=\"btn btn-secondary\" [ngClass]=\"getClass('/login')\" [routerLink]=\"['login']\">Login</button>\n            </li>\n            <li class=\"nav-link odmakni-btn\">\n              <button type=\"button\" class=\"btn btn-secondary\" [ngClass]=\"getClass('/register')\" [routerLink]=\"['register']\">Register</button>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </div>\n  </div>\n\n  <!-- Samo za xs -->\n  <div class=\"d-block d-sm-none\">\n    <div class=\"row\">\n      <nav class=\"navbar navbar-expand-sm bg-dark navbar-dark fixed-bottom\">\n        <div class=\"col-6\">\n          <!-- Brand -->\n          <button class=\"navbar-brand\" style=\"margin-right: 40px; background-color:transparent; border: none;\" [routerLink]=\"['']\">Bankify Trust</button>\n\n          <ul class=\"navbar-nav ml-auto\">\n            <li class=\"nav-link\">\n              <i class=\"nav-link fa fa-facebook zoom\" style=\"font-size: 40px; margin: 0px 20px\"></i>\n              <i class=\"nav-link fa fa-instagram zoom\" style=\"font-size: 40px; margin: 0px 35px\"></i>\n            </li>\n            <li class=\"nav-link\">\n              <i class=\"nav-link fa fa-twitter zoom\" style=\"font-size: 40px; margin: 0px 20px\"></i>\n              <i class=\"nav-link fa fa-pinterest zoom\" style=\"font-size: 40px; margin: 0px 20px\"></i>\n            </li>\n          </ul>\n        </div>\n\n        <div class=\"col-6\">\n          <!-- Links -->\n          <ul class=\"navbar-nav\">\n            <li class=\"nav-link odmakni-btn\">\n              <button type=\"button\" class=\"btn btn-secondary\" [ngClass]=\"getClass('/accountBalance')\" [routerLink]=\"['accountBalance']\">Account balance</button>\n            </li>\n            <li class=\"nav-link odmakni-btn\">\n              <button type=\"button\" class=\"btn btn-secondary\" [ngClass]=\"getClass('/payment')\" [routerLink]=\"['payment']\">Payments</button>\n            </li>\n            <li class=\"nav-link odmakni-btn\">\n              <button type=\"button\" class=\"btn btn-secondary\" [ngClass]=\"getClass('/payout')\" [routerLink]=\"['payout']\">Payouts</button>\n            </li>\n            <li class=\"nav-link odmakni-btn\">\n              <button type=\"button\" class=\"btn btn-secondary\" [ngClass]=\"getClass('/login')\" [routerLink]=\"['login']\">Login</button>\n            </li>\n            <li class=\"nav-link odmakni-btn\">\n              <button type=\"button\" class=\"btn btn-secondary\" [ngClass]=\"getClass('/register')\" [routerLink]=\"['register']\">Register</button>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </div>\n  </div>\n</footer>\n</html>\n","import { Component, OnInit } from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {AuthService} from \"../auth.service\";\nimport {User} from \"../../modeli/user.model\";\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(private router: Router, private auth: AuthService) { }\n\n  user: User;\n\n  ngOnInit(): void {\n    this.user = this.auth.getUser();\n    console.log(this.user);\n  }\n\n  getClass(path) {\n    return this.router.url == path ? 'active' : '';\n  }\n\n  onLogout() {\n    this.auth.logout();\n  }\n\n  userExists(){\n    return this.auth.getUser() != null && this.auth.getUser() != undefined;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RegisterRoutingModule } from './register-routing.module';\nimport {RegisterComponent} from \"../register.component\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ValidateEqualModule} from \"ng-validate-equal\";\n\n\n@NgModule({\n  declarations: [RegisterComponent],\n  imports: [\n    CommonModule,\n    RegisterRoutingModule,\n    FormsModule,\n    ValidateEqualModule\n  ]\n})\nexport class RegisterModule { }\n","export class User{\r\n\r\n  _id: any;\r\n  username: string;\r\n  email: string;\r\n  password: string;\r\n  repeatedPassword?: string;\r\n  balance: number;\r\n  level: number;\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BankRoutingModule } from './bank-routing.module';\nimport {BankComponent} from \"../bank.component\";\n\n\n@NgModule({\n  declarations: [BankComponent],\n  imports: [\n    CommonModule,\n    BankRoutingModule\n  ]\n})\nexport class BankModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {BankComponent} from \"../bank.component\";\n\nconst routes: Routes = [\n  {path: '', component: BankComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BankRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {AccountBalanceComponent} from \"../account-balance.component\";\n\nconst routes: Routes = [\n  {path: '', component: AccountBalanceComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AccountBalanceRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject} from \"rxjs\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Payment} from \"./modeli/payment.model\";\nimport {environment} from \"../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataPaymentsService {\n\n  // apiRoot = 'http://localhost:8081/api/payments';\n  apiRoot = environment.API_URL + '/api/payments';\n  // deleteApiRoot = 'http://localhost:8081/api/deletePayments';\n  deleteApiRoot = environment.API_URL + '/api/deletePayments';\n  payments: Payment[] = [];\n  paymentsSubject: BehaviorSubject<Payment[]> = new BehaviorSubject(null);\n\n  constructor(private http: HttpClient) {\n    this.onInit();\n  }\n\n  onInit(){\n    this.http.get(this.apiRoot).subscribe((res: any) => {\n      this.payments = res.payments;\n      console.log(this.payments);\n      this.paymentsSubject.next([...this.payments]);\n    })\n  }\n\n  getPayments(){\n    return this.paymentsSubject;\n  }\n\n  addPayment(payment){\n    this.http.post(this.apiRoot, payment).subscribe((res: any) =>{\n      this.payments.push(res.payment);\n      this.paymentsSubject.next([...this.payments]);\n    })\n  }\n\n  deletePayment(id){\n    this.http.delete(this.apiRoot + `/${id}`).subscribe(res =>{\n      this.payments = this.payments.filter(x => x._id != id);\n      this.paymentsSubject.next([...this.payments]);\n    })\n  }\n\n  updatePayment(newPayment: Payment){\n    this.http.put(this.apiRoot + `/${newPayment._id}`, newPayment).subscribe(res =>{\n      let idx = this.payments.findIndex(x => x._id == newPayment._id)\n      this.payments[idx] = newPayment;\n      this.paymentsSubject.next([...this.payments]);\n    })\n  }\n\n  deletePaymentsByUser(userId){\n    this.http.delete(this.deleteApiRoot + `/${userId}`).subscribe(res =>{\n      debugger;\n      this.payments = this.payments.filter(\n        x => (x.userFrom._id != userId) || (x.userTo._id != userId)\n      );\n      console.log(this.payments);\n      this.paymentsSubject.next([...this.payments]);\n    })\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {Payment} from \"../modeli/payment.model\";\nimport {User} from \"../modeli/user.model\";\nimport {Router} from \"@angular/router\";\n\n@Pipe({\n  name: 'filterPaymentsByUser'\n})\nexport class FilterPaymentsByUserPipe implements PipeTransform {\n\n  constructor(private router: Router) {\n  }\n\n  transform(array: Payment[], user: User): any[] {\n    if(!Array.isArray(array))\n      return;\n\n\n    if(this.router.url.includes('/payment'))\n      return array.filter(x => x.userFrom.username == user.username);\n    else if (this.router.url.includes('/payout'))\n      return array.filter(x => x.userTo.username == user.username);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ManageUsersRoutingModule } from './manage-users-routing.module';\nimport {ManageUsersComponent} from \"../manage-users.component\";\n\n\n@NgModule({\n  declarations: [ManageUsersComponent],\n  imports: [\n    CommonModule,\n    ManageUsersRoutingModule\n  ]\n})\nexport class ManageUsersModule { }\n","import {Injectable, Injector, OnDestroy} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Router} from \"@angular/router\";\nimport {BehaviorSubject, Subject, Subscription} from \"rxjs\";\nimport {User} from \"../modeli/user.model\";\nimport {DataUsersService} from \"../data-users.service\";\nimport {environment} from \"../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService implements OnDestroy {\n\n  user : any;\n  errorEmitter : Subject<string> = new Subject<string>();\n  authChange : Subject<boolean> = new Subject<boolean>();\n\n  users: any[] = null;\n  usersSubject: BehaviorSubject<User[]> = null;\n  subscription: Subscription;\n\n  authUrl: string = environment.API_URL + '/authenticate';\n  // authUrl: string = 'http://localhost:8081/authenticate';\n  token: string;\n\n\n  constructor(private http: HttpClient, private router: Router, private injector: Injector) { }\n\n  login(credentials : {username : string, password: string}){\n\n    let usersService = this.injector.get(DataUsersService);\n\n    this.subscription = usersService.getUsers().subscribe(res => {\n      this.users = res;\n    });\n\n    this.http.post(this.authUrl, credentials)\n      // .subscribe(async (res : {status : string, description? : string, user? : User, token? : string }) => {\n      .subscribe((res : {status : string, description? : string, user? : User, token? : string }) => {\n        if (res.status == \"OK\") {\n          this.user = res.user;\n          this.token = res.token;\n          localStorage.setItem('token', this.token);\n          localStorage.setItem('user', JSON.stringify(this.user));\n          this.authChange.next(true);\n          this.router.navigate(['/accountBalance']);\n        }\n        else {\n          this.errorEmitter.next(res.description);\n        }\n      });\n\n  }\n\n  logout(){\n    this.user = null;\n    this.token = null;\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    this.authChange.next(false);\n    this.router.navigate(['/login']);\n  }\n\n  getUser(){\n    if (!this.user) {\n      this.user = JSON.parse(localStorage.getItem('user'));\n    }\n\n    return this.user;\n  }\n\n  getToken(){\n    if (this.token)\n      return this.token;\n    else {\n      if (localStorage.getItem('token')) {\n        this.token = localStorage.getItem('token');\n        return this.token;\n      }\n    }\n    return null;\n  }\n\n  isAuthenticated(){\n    return this.getUser();\n  }\n\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n\n  // whoAmI() {\n  //   if (this.isAuthenticated()) {\n  //     return this.user\n  //   } else {\n  //     return new Observable(observer => {\n  //       observer.next({status:100})\n  //     })\n  //   }\n  //\n  // }\n\n\n}\n","import { Component } from '@angular/core';\nimport {AuthService} from \"./shared/auth.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Bank';\n\n  constructor(private auth: AuthService, private router: Router) {\n  }\n\n  ngOnInit() {\n    if (!this.auth.isAuthenticated()) {\n      console.log('sus');\n      this.router.navigate(['login'])\n    }\n  }\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {PayoutComponent} from \"../payout.component\";\n\nconst routes: Routes = [\n  {path: '', component: PayoutComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PayoutRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {NavbarComponent} from \"../navbar/navbar.component\";\nimport {RouterModule} from \"@angular/router\";\nimport {FilterPaymentsByUserPipe} from \"../filter-payments-by-user.pipe\";\n\n\n@NgModule({\n  declarations: [NavbarComponent],\n  exports: [\n    NavbarComponent\n  ],\n    imports: [\n        CommonModule,\n        RouterModule,\n        CommonModule,\n    ]\n})\nexport class SharedModule { }\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {SharedModule} from \"./shared/moduli/shared.module\";\nimport {HTTP_INTERCEPTORS, HttpClientModule} from \"@angular/common/http\";\nimport {AuthInterceptor} from \"./shared/auth.interceptor\";\nimport {AuthService} from \"./shared/auth.service\";\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    SharedModule,\n    HttpClientModule\n  ],\n  providers: [AuthService, {provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {Injectable, Injector} from \"@angular/core\";\nimport {AuthService} from \"./auth.service\";\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(private injector: Injector){}\n\n  intercept(request : HttpRequest<any>, next: HttpHandler) : Observable<HttpEvent<any>> {\n\n    let authService = this.injector.get(AuthService);\n\n    const token = authService.getToken();\n\n    if (token){\n\n      const copiedReq = request.clone({\n        setHeaders: {\n              Authorization: `Bearer ${authService.getToken()}`\n        },\n        params : request.params.set('token', <string>authService.getToken())\n      });\n\n      return next.handle(copiedReq);\n\n      // request = request.clone({\n      //   setHeaders: {\n      //     Authorization: `Bearer ${this.auth.getToken()}`\n      //   }\n      // });\n      //\n      // return next.handle(request);\n\n    } else {\n      return next.handle(request);\n    }\n\n\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {AuthService} from \"./auth.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleGuard implements CanActivate {\n\n  constructor(public auth: AuthService, public router: Router) {}\n\n  canActivate(){\n    console.log(this.auth.getUser());\n    if(this.auth.getUser() != null && this.auth.getUser() != undefined) {\n      if (this.auth.getUser().level != 2) {\n        this.router.navigate(['accountBalance']);\n        return false;\n      }\n      else\n        return true;\n    }\n    return false;\n  }}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {LoginComponent} from \"../login.component\";\n\nconst routes: Routes = [\n  {path: '', component: LoginComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-bank',\n  templateUrl: './bank.component.html',\n  styleUrls: ['./bank.component.css']\n})\nexport class BankComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div style=\"background-image: url(./assets/images/ocean.jpg); height: 500px\">\n  <div class=\"container\">\n    <br>\n    <h2>Empowering the Croatian dream of small business owners</h2>\n\n    <p>Our mission is to create an unprecedented banking experience for small business owners nationwide,\n      through service and technology. Bankify Trust is not your traditional bank. With a laser focus on\n      innovation service and technoology, we bring efficiency and excellence to the lending process. We\n      believe deeply in personal service and focus on taking care of our customers throughout the life.\n    </p>\n\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LoginRoutingModule } from './login-routing.module';\nimport {LoginComponent} from \"../login.component\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\n\n\n@NgModule({\n  declarations: [LoginComponent],\n    imports: [\n        CommonModule,\n        LoginRoutingModule,\n        ReactiveFormsModule\n    ]\n})\nexport class LoginModule { }\n","<div class=\"container\">\n  <p *ngIf=\"user != null || user != undefined\">Welcome {{user.username}} your current balance is {{user.balance}}$</p>\n\n  <h2 style=\"text-align: center\">Last Payments:</h2>\n  <div class=\"jumbotron\">\n    <div *ngFor=\"let pay of filteredPayment\">\n      <h5 style=\"text-align: center\">Payment to {{pay.userTo.username}}:</h5>\n      <p>{{pay.date | date:'dd.MM.yyyy.'}} => {{pay.amount}}$</p>\n      <br>\n    </div>\n  </div>\n\n  <h2 style=\"text-align: center\">Last Payouts:</h2>\n  <div class=\"jumbotron\">\n    <div *ngFor=\"let pay of filteredPayout\">\n      <h5 style=\"text-align: center\">Payout from {{pay.userFrom.username}}:</h5>\n      <p>{{pay.date | date:'dd.MM.yyyy.'}} => {{pay.amount}}$</p>\n    </div>\n  </div>\n\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Payment} from \"../modeli/payment.model\";\nimport {Subscription} from \"rxjs\";\nimport {DataPaymentsService} from \"../data-payments.service\";\nimport {AuthService} from \"../shared/auth.service\";\nimport {User} from \"../modeli/user.model\";\n\n@Component({\n  selector: 'app-account-balance',\n  templateUrl: './account-balance.component.html',\n  styleUrls: ['./account-balance.component.css']\n})\nexport class AccountBalanceComponent implements OnInit, OnDestroy {\n\n  payments: Payment[] = [];\n  filteredPayment: Payment[] = []\n  filteredPayout: Payment[] = [];\n  subscription: Subscription;\n  user: User;\n\n  constructor(private paymentsService: DataPaymentsService, private auth: AuthService) { }\n\n  ngOnInit(): void {\n    this.subscription = this.paymentsService.getPayments().subscribe((res: any) => {\n      this.user = this.auth.getUser();\n      if(res != null) {\n        this.payments = res;\n        this.filteredPayment = this.payments.filter(x => x.userFrom._id == this.user._id);\n        this.filteredPayout = this.payments.filter(x => x.userTo._id == this.user._id);\n        if(this.filteredPayment.length > 5)\n          this.filteredPayment.length = 5;\n        if(this.filteredPayout.length > 5)\n          this.filteredPayout.length = 5;\n      }\n    })\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n}\n","<div class=\"container\">\n  <p>Hello SuperUser!</p>\n\n  <h2 style=\"text-align: center\">All Users:</h2>\n  <div class=\"jumbotron\">\n    <div *ngFor=\"let user of users\">\n      <h2 style=\"text-align: center\">{{user.username}}:</h2>\n      <h6>ID: {{user._id}}</h6>\n      <h6>Email: {{user.email}}</h6>\n      <h6>Password: {{user.password}}</h6>\n      <h6>Balance: {{user.balance}}</h6>\n      <h6>Level: {{user.level}}</h6>\n      <button class=\"btn btn-danger\" (click)=\"deleteUser(user)\">Delete {{user.username}}</button>\n      <br>\n    </div>\n  </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from \"../shared/auth.service\";\nimport {DataUsersService} from \"../data-users.service\";\nimport {User} from \"../modeli/user.model\";\nimport {DataPaymentsService} from \"../data-payments.service\";\nimport {Payment} from \"../modeli/payment.model\";\n\n@Component({\n  selector: 'app-manage-users',\n  templateUrl: './manage-users.component.html',\n  styleUrls: ['./manage-users.component.css']\n})\nexport class ManageUsersComponent implements OnInit {\n\n  users: User[] = [];\n  user: User;\n\n  constructor(private auth: AuthService, private usersService: DataUsersService, private paymentService: DataPaymentsService) { }\n\n  ngOnInit(): void {\n    this.usersService.getUsers().subscribe((res:any) =>{\n      this.users = res;\n      this.user = this.auth.getUser();\n    })\n  }\n\n  deleteUser(user: User) {\n    debugger;\n    this.usersService.deleteUser(user);\n    this.users = this.users.filter(x => x._id != user._id);\n    this.paymentService.deletePaymentsByUser(user._id);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {AuthService} from \"./auth.service\";\nimport {CanActivate, Router} from \"@angular/router\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n  constructor(public auth: AuthService, public router: Router) {}\n\n  canActivate(){\n    if (!this.auth.isAuthenticated()) {\n      this.router.navigate(['login']);\n      return false;\n    }\n    return true;\n  }}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {BankModule} from \"./bank/moduli/bank.module\";\nimport {LoginModule} from \"./login/moduli/login.module\";\nimport {RegisterModule} from \"./register/moduli/register.module\";\nimport {PaymentModule} from \"./payment/moduli/payment.module\";\nimport {PayoutModule} from \"./payout/moduli/payout.module\";\nimport {AccountBalanceModule} from \"./account-balance/moduli/account-balance.module\";\nimport {AuthGuardService} from \"./shared/auth-guard.service\";\nimport {ManageUsersModule} from \"./manage-users/moduli/manage-users.module\";\nimport {RoleGuard} from \"./shared/role.guard\";\n\nconst routes: Routes = [\n  {path: '', loadChildren: () => BankModule},\n  {path: 'login', loadChildren: () => LoginModule},\n  {path: 'register', loadChildren: () => RegisterModule},\n  {path: 'payment', loadChildren: () => PaymentModule, canActivate: [AuthGuardService]},\n  {path: 'payout', loadChildren: () => PayoutModule, canActivate: [AuthGuardService]},\n  {path: 'accountBalance', loadChildren: () => AccountBalanceModule, canActivate: [AuthGuardService]},\n  {path: 'manageUsers', loadChildren: () => ManageUsersModule, canActivate: [RoleGuard]}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {AuthService} from \"../shared/auth.service\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  errorMessage: string = null;\n  signinForm: FormGroup;\n\n  constructor(private auth: AuthService) { }\n\n  ngOnInit(): void {\n\n    this.signinForm = new FormGroup({\n        'username': new FormControl(null, [Validators.required]),\n        'password': new FormControl(null, [Validators.required])\n      }\n    )\n\n    this.auth.errorEmitter\n      .subscribe((error: string) => {\n        this.errorMessage = error;\n      })\n\n  }\n\n  onLogin() {\n    this.auth.login(this.signinForm.value);\n  }\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <form (submit)=\"onLogin()\" [formGroup]=\"signinForm\">\n\n        <h2> Login: </h2>\n\n        <div class=\"form-group\">\n          <label> Username: </label>\n          <input type=\"text\" formControlName=\"username\" placeholder=\"Enter username\" class=\"form-control\">\n        </div>\n\n        <div class=\"form-group\">\n          <label> Password: </label>\n          <input type=\"password\" formControlName=\"password\" placeholder=\"Enter password\" class=\"form-control\">\n        </div>\n\n        <button class=\"btn btn-success\" style=\"margin-right: 5px\" type=\"submit\" [disabled]=\"signinForm.invalid\"> Login</button>\n        <button class=\"btn btn-warning\" type=\"submit\" [routerLink]=\"'/register'\"> Register</button>\n\n        <div *ngIf=\"errorMessage\">{{errorMessage}}</div>\n        <br>\n        <a [routerLink]=\"'/'\">Go back</a>\n\n      </form>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AccountBalanceRoutingModule } from './account-balance-routing.module';\nimport {AccountBalanceComponent} from \"../account-balance.component\";\n\n\n@NgModule({\n  declarations: [AccountBalanceComponent],\n  imports: [\n    CommonModule,\n    AccountBalanceRoutingModule\n  ]\n})\nexport class AccountBalanceModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}